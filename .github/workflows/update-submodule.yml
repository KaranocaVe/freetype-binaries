name: FreeType Submodule Auto-Updater

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 运行
  workflow_dispatch:
    
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      
      # 这一步将作为基准版本，即“旧版本”
      - name: Get current FreeType version from submodule
        id: get_current_version
        run: |
          # 确保子模块存在，如果不存在，checkout@v4 submodules:true 也会拉取
          # 但为了保险，我们在这里确保它存在。
          if [ ! -d "freetype" ]; then
            git submodule update --init freetype
          fi
          ll
          CURRENT_VERSION=$(head -n 1 freetype/README | grep -oE '([0-9]+\.[0-9]+\.[0-9]+)')
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      # 更新子模块到最新版本，但不进行提交
      - name: Update submodule to latest
        run: git submodule update --remote --recursive

      # 检查更新后的版本号，并与旧版本进行对比
      - name: Check for new FreeType version
        id: check_new_version
        run: |
          # 获取更新后子模块的 README 中的版本号
          NEW_VERSION=$(head -n 1 freetype/README | grep -oE '([0-9]+\.[0-9]+\.[0-9]+)')
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          echo "Current FreeType version: ${{ env.CURRENT_VERSION }}"
          echo "New FreeType version: ${{ env.NEW_VERSION }}"

          if [[ "${{ env.CURRENT_VERSION }}" == "$NEW_VERSION" ]]; then
            echo "::notice::版本号没有变化，无需推送更新。"
            echo "version_updated=false" >> $GITHUB_OUTPUT
          else
            echo "::notice::检测到版本号已更新，准备推送子模块更新。"
            echo "version_updated=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_new_version.outputs.version_updated == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add freetype
          git commit -m "chore: Update FreeType submodule to v${{ env.NEW_VERSION }}"
          git push
          echo "子模块已更新并推送。"